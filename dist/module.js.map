{"mappings":"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","sources":["src/index.js","src/Engine/DocumentProcessor.js","src/Engine/VariableProcessor.js","src/formatters/Formatter.js","src/formatters/StringFormatter.js","src/formatters/BaseFormatter.js","src/formatters/NumberFormatter.js","src/formatters/PercentageFormatter.js","src/formatters/ListFormatter.js","src/formatters/DateFormatter.js","src/formatters/TimeFormatter.js","src/formatters/CurrencyFormatter.js","src/formatters/DataBaseFormatter.js","src/formatters/StructuredFormatter.js"],"sourcesContent":["'use strict';\r\n\r\nimport documentProcessor from './Engine/DocumentProcessor';\r\n\r\nwindow.documentProcessor = documentProcessor;\r\n","import VariableProcessor from './VariableProcessor';\r\nimport nunjucks from 'nunjucks';\r\n\r\nclass DocumentProcessor {\r\n  constructor() {}\r\n\r\n  execute(documentTemplate, variableData) {\r\n    const formattedVariables = VariableProcessor.formatter(variableData);\r\n\r\n    const documentTxt = nunjucks.renderString(\r\n      documentTemplate,\r\n      formattedVariables,\r\n    );\r\n\r\n    return documentTxt;\r\n  }\r\n}\r\n\r\nexport default new DocumentProcessor();\r\n","import Formatter from '../formatters/Formatter';\r\nconst { formatters } = Formatter;\r\n\r\nclass VariableProcessor {\r\n  constructor() {}\r\n\r\n  formatter({ variables, variables_specification }) {\r\n    const formatted = {};\r\n\r\n    for (const index in variables_specification) {\r\n      const variable = variables[index];\r\n      formatted[index] = this._variableFormatter({\r\n        specs: variables_specification[index],\r\n        variable,\r\n      });\r\n    }\r\n\r\n    return formatted;\r\n  }\r\n\r\n  _variableFormatter(variableData) {\r\n    try {\r\n      const style =\r\n        variableData.specs.doc_display_style &&\r\n        !variableData.specs.doc_display_style.includes('%')\r\n          ? variableData.specs.doc_display_style\r\n          : 'plain';\r\n      const type =\r\n        variableData.specs.type.substr(0, 11) === 'structured_'\r\n          ? 'structured'\r\n          : variableData.specs.type;\r\n      return formatters[type][style](variableData);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return variableData.variable;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new VariableProcessor();\r\n","import StringFormatter from './StringFormatter';\r\nimport NumberFormatter from './NumberFormatter';\r\nimport PercentageFormatter from './PercentageFormatter';\r\nimport ListFormatter from './ListFormatter';\r\nimport DateFormatter from './DateFormatter';\r\nimport TimeFormatter from './TimeFormatter';\r\nimport CurrencyFormatter from './CurrencyFormatter';\r\nimport DataBaseFormatter from './DataBaseFormatter';\r\nimport StructuredFormatter from './StructuredFormatter';\r\n\r\nclass Formatter {\r\n  get formatters() {\r\n    return {\r\n      string: StringFormatter,\r\n      number: NumberFormatter,\r\n      percentage: PercentageFormatter,\r\n      list: ListFormatter,\r\n      date: DateFormatter,\r\n      time: TimeFormatter,\r\n      currency: CurrencyFormatter,\r\n      database: DataBaseFormatter,\r\n      structured: StructuredFormatter,\r\n    };\r\n  }\r\n}\r\n\r\nexport default new Formatter();\r\n","import BaseFormatter from './BaseFormatter';\r\n\r\nclass StringFormatter extends BaseFormatter {\r\n  sentence_case({ variable }) {\r\n    return variable.charAt(0).toUpperCase() + variable.toLowerCase().slice(1);\r\n  }\r\n\r\n  uppercase({ variables, variable }) {\r\n    return variable.toUpperCase();\r\n  }\r\n\r\n  lowercase({ variable }) {\r\n    return variable.toLowerCase();\r\n  }\r\n}\r\n\r\nexport default new StringFormatter();\r\n","class BaseFormatter {\r\n  plain({ variable }) {\r\n    return variable;\r\n  }\r\n}\r\n\r\nexport default BaseFormatter;\r\n","import BaseFormatter from './BaseFormatter';\r\nimport extenso from 'extenso';\r\nimport 'ordinal-pt-br';\r\n\r\nclass NumberFormatter extends BaseFormatter {\r\n  extended({ variable }) {\r\n    return `${variable} (${extenso(variable)})`;\r\n  }\r\n\r\n  percent({ variable }) {\r\n    return `${variable}% (${extenso(variable)} por cento)`;\r\n  }\r\n\r\n  ordinal({ variable }) {\r\n    return variable.toOrdinal();\r\n  }\r\n}\r\n\r\nexport default new NumberFormatter();\r\n","import BaseFormatter from './BaseFormatter';\r\nimport extenso from 'extenso';\r\n\r\nclass PercentageFormatter extends BaseFormatter {\r\n  plain({ variable }) {\r\n    return variable.replace('.', ',') + '%';\r\n  }\r\n\r\n  extended({ variable }) {\r\n    return extenso(variable) + ' porcento';\r\n  }\r\n}\r\n\r\nexport default new PercentageFormatter();\r\n","import BaseFormatter from './BaseFormatter';\r\n\r\nclass ListFormatter extends BaseFormatter {\r\n  commas({ variable }) {\r\n    if (variable.length < 2) return variable[0];\r\n    const last_element = variable.pop();\r\n    variable[variable.length - 1] =\r\n      variable[variable.length - 1] + ' e ' + last_element;\r\n    return variable.join(', ');\r\n  }\r\n\r\n  bullets({ variable, text_type = '.txt' }) {\r\n    if (text_type == '.txt')\r\n      return '<ol><li>' + variable.join('</li><li>') + '</li></ol>';\r\n\r\n    if (text_type == '.docx') return variable.join('a');\r\n  }\r\n}\r\n\r\nexport default new ListFormatter();\r\n","import BaseFormatter from './BaseFormatter';\r\n\r\nclass DateFormatter extends BaseFormatter {\r\n  #month = [\r\n    'Janeiro',\r\n    'Fevereiro',\r\n    'Março',\r\n    'Abril',\r\n    'Maio',\r\n    'Junho',\r\n    'Julho',\r\n    'Agosto',\r\n    'Setembro',\r\n    'Outubro',\r\n    'Novembro',\r\n    'Dezembro',\r\n  ];\r\n\r\n  plain({ variable, doc_display_style }) {\r\n    const date = new Date(variable);\r\n    return doc_display_style.includes('%')\r\n      ? doc_display_style\r\n          .replace('%d', date.getDate())\r\n          .replace('%m', date.getMonth() + 1)\r\n          .replace('%Y', date.getFullYear())\r\n      : value;\r\n  }\r\n\r\n  extended({ variable }) {\r\n    const date = new Date(variable);\r\n    return `${date.getDate()} de ${\r\n      this.#month[date.getMonth()]\r\n    } de ${date.getFullYear()}`;\r\n  }\r\n\r\n  date_extended({ variable }) {\r\n    const date = new Date(variable);\r\n    return `${date.getDate()} de ${\r\n      this.#month[date.getMonth()]\r\n    } de ${date.getFullYear()}`;\r\n  }\r\n}\r\n\r\nexport default new DateFormatter();\r\n","import BaseFormatter from './BaseFormatter';\r\nimport extenso from 'extenso';\r\n\r\nclass TimeFormatter extends BaseFormatter {\r\n  extended({ variable }) {\r\n    const [stringHora, stringMinutos] = [\r\n      extenso(parseInt(variable.substr(0, 2))),\r\n      extenso(parseInt(variable.substr(3, 5))),\r\n    ];\r\n    const hora =\r\n      stringHora === 'um' ? stringHora + 'a hora' : stringHora + ' horas';\r\n    const minuto =\r\n      stringMinutos === 'zero'\r\n        ? ''\r\n        : ` e ${stringMinutos} \r\n        ${stringMinutos === 'um' ? 'minuto' : 'minutos'}`;\r\n    return `${hora}${minuto}`;\r\n  }\r\n}\r\n\r\nexport default new TimeFormatter();\r\n","import BaseFormatter from './BaseFormatter';\r\nimport extenso from 'extenso';\r\n\r\nclass CurrencyFormatter extends BaseFormatter {\r\n  extended({ variable }) {\r\n    const value = variable;\r\n    return `${value.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    })} (${extenso(value, { mode: 'currency', currency: { type: 'BRL' } })})`;\r\n  }\r\n\r\n  date_extended({ variable }) {\r\n    const value = variable;\r\n    return `${value.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    })} (${extenso(value, { mode: 'currency', currency: { type: 'BRL' } })})`;\r\n  }\r\n\r\n  plain({ variable }) {\r\n    return variable.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    });\r\n  }\r\n}\r\n\r\nexport default new CurrencyFormatter();\r\n","import BaseFormatter from './BaseFormatter';\r\nimport slugify from 'slugify';\r\nclass DataBaseFormatter extends BaseFormatter {\r\n  plain({ variable, specs }) {\r\n    const newVariables = {};\r\n    response = specs.database_endpoint;\r\n    let searchResult;\r\n\r\n    for (const item in response) {\r\n      if (response[item][specs.search_key] === parseInt(variable)) {\r\n        searchResult = response[item];\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (const key in searchResult) {\r\n      newVariables[slugify(key).upper().replace('-', '_')] = searchResult[key];\r\n    }\r\n\r\n    return newVariables;\r\n  }\r\n}\r\nexport default new DataBaseFormatter();\r\n","import BaseFormatter from './BaseFormatter';\r\nimport nunjucks from 'nunjucks';\r\n\r\nclass StructuredFormatter extends BaseFormatter {\r\n  text({ variable, specs }) {\r\n    const rowsList = [];\r\n    const template = nunjucks.renderString(\r\n      specs.extra_style_params.row_template,\r\n    );\r\n    for (const index in variable) {\r\n      variable[index]['INDEX'] = index + 1;\r\n      const filledText = nunjucks.render(template, variable[index]);\r\n      rowsList.append(filledText);\r\n    }\r\n    return rowsList.join(specs.extra_style_params.separator);\r\n  }\r\n\r\n  table({ variable, specs }) {\r\n    const tableList = [];\r\n    const tableTitle = specs.extra_style_params.title;\r\n    const lines = specs.extra_style_params.lines;\r\n    let i = 0;\r\n    for (const item in variable) {\r\n      const tableRows = `<tr><td><p>${tableTitle.replace(\r\n        '/({.*?})/g',\r\n        i + 1,\r\n      )}</p></td></tr>`;\r\n      i += 1;\r\n      for (const lineSpec in lines) {\r\n        const columns = [];\r\n        for (const info in lineSpec) {\r\n          for (const label in info) {\r\n            columns.append(`<td>${label}</td><td>${item[info[label]]}</td>`);\r\n          }\r\n        }\r\n        tableRows.append('<tr>' + columns.join('') + '</tr>');\r\n      }\r\n      tableList.append(tableRows.join(''));\r\n    }\r\n    return `<figure class='table'><table><tbody>\r\n    ${tableList.join('')}\r\n    </tbody></table></figure>`;\r\n  }\r\n\r\n  numbering({ variable, specs }) {\r\n    const result = [];\r\n    if (specs.extra_style_params.row_template != '') {\r\n      const row_template = specs.extra_style_params.row_template;\r\n      template = nunjucks.renderString(row_template);\r\n      for (const index in variable) {\r\n        variable[index]['INDEX'] = index + 1;\r\n        const filledText = nunjucks.render(template, variable[index]);\r\n        result.append(filledText);\r\n      }\r\n    } else {\r\n      for (const variableIndex in variable) {\r\n        for (const key in variableIndex) {\r\n          result.append(variable[variableIndex][key]);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default new StructuredFormatter();\r\n"],"names":["documentProcessor","window","VariableProcessor","nunjucks","DocumentProcessor","constructor","execute","documentTemplate","variableData","formattedVariables","formatter","documentTxt","renderString","Formatter","formatters","variables","variables_specification","formatted","index","variable","_variableFormatter","specs","style","doc_display_style","includes","type","substr","e","console","log","StringFormatter","NumberFormatter","PercentageFormatter","ListFormatter","DateFormatter","TimeFormatter","CurrencyFormatter","DataBaseFormatter","StructuredFormatter","string","number","percentage","list","date","time","currency","database","structured","BaseFormatter","sentence_case","charAt","toUpperCase","toLowerCase","slice","uppercase","lowercase","plain","extenso","extended","percent","ordinal","toOrdinal","replace","commas","length","last_element","pop","join","bullets","text_type","month","Date","getDate","getMonth","getFullYear","value","date_extended","stringHora","stringMinutos","parseInt","hora","minuto","toLocaleString","mode","slugify","newVariables","response","database_endpoint","searchResult","item","search_key","key","upper","text","rowsList","template","extra_style_params","row_template","filledText","render","append","separator","table","tableList","tableTitle","title","lines","i","tableRows","lineSpec","columns","info","label","numbering","result","variableIndex"],"version":3,"file":"module.js.map"}